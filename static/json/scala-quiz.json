[{"id":1,"question":"Scala bytecode can run on top of Java VM. What is the fundamental difference between Java object.clone() and Scala object.copy()?","code":"","reference":"","choices":[{"text":"One is a Java object, the other is a Scala object.","answer":false,"code":false},{"text":"clone() will copy class structures but not the data, while copy() will also copy data into new objects.","answer":false,"code":false},{"text":"There is no difference.","answer":false,"code":false},{"text":"copy() allows you to change values during the copying process; clone() does not.","answer":true,"code":false}]},{"id":2,"question":"What value does this code return?","code":"scala val m1 = Map(\"a\"->1,\"b\"->2,\"c\"->3) m1(\"a\")","reference":"```","choices":[{"text":"a","answer":false,"code":false},{"text":"2","answer":false,"code":false},{"text":"b","answer":false,"code":false},{"text":"1","answer":true,"code":false}]},{"id":3,"question":"What is one way to avoid low-level parallelization details?","code":"","reference":"","choices":[{"text":"monads","answer":false,"code":false},{"text":"literal functions","answer":false,"code":false},{"text":"partially applied functions","answer":false,"code":false},{"text":"parallel collections","answer":true,"code":false}]},{"id":4,"question":"What do you use in ScalaTest to see a detailed diagram of error messages when a test fails?","code":"","reference":"","choices":[{"text":"ArgumentExceptions","answer":false,"code":false},{"text":"AssertionException","answer":false,"code":false},{"text":"DiagrammedAssertions","answer":true,"code":false},{"text":"JUnit","answer":false,"code":false}]},{"id":5,"question":"What data type would you use to store an immutable collection of objects that contain a fixed number of varying types?","code":"","reference":"","choices":[{"text":"Array","answer":false,"code":false},{"text":"ImmutableCollection","answer":false,"code":false},{"text":"List","answer":false,"code":false},{"text":"Tuple","answer":true,"code":false}]},{"id":6,"question":"After defining a function in the interpreter, Scala returns the following. What does the `()` indicate?","code":"myfnc: ()Unit","reference":"```","choices":[{"text":"The function has no side effects.","answer":false,"code":false},{"text":"The function takes no parameters.","answer":false,"code":false},{"text":"The function returns no value.","answer":true,"code":false},{"text":"Returning unit types to the function is a closures.","answer":false,"code":false}]},{"id":7,"question":"What type of number is 1234.e5?","code":"","reference":"","choices":[{"text":"hexadecimal","answer":false,"code":false},{"text":"short","answer":false,"code":false},{"text":"floating point","answer":true,"code":false},{"text":"long","answer":false,"code":false}]},{"id":8,"question":"When you convert a map to a list using the `toList` method of the map, the result will be of which type?","code":"","reference":"","choices":[{"text":"`List[(String, String)]`","answer":false,"code":false},{"text":"`List[(Array, Array)]`","answer":false,"code":false},{"text":"`List[(Collection, Collection)]`","answer":false,"code":false},{"text":"`List`","answer":true,"code":false}]},{"id":9,"question":"What type of object does this code create?","code":"val x = (1234, \"Active\")","reference":"```","choices":[{"text":"List","answer":false,"code":false},{"text":"Map","answer":false,"code":false},{"text":"Tuple","answer":true,"code":false},{"text":"Array","answer":false,"code":false}]},{"id":10,"question":"Which is a subclass of all classes?","code":"","reference":"","choices":[{"text":"AnyVal","answer":false,"code":false},{"text":"AnyRef","answer":false,"code":false},{"text":"Method","answer":false,"code":false},{"text":"Null","answer":true,"code":false}]},{"id":11,"question":"For the for-yield construct, is the scope separate between for-body and yield-body?","code":"**Example**: yield-body has access to the `e` variable from the for-body scala val a = Array(1, 2, 3, 4, 5) for {      e <- a if e > 2 } yield e","reference":"```","choices":[{"text":"Yes and no. It is different depending on the for construct and what it does.","answer":false,"code":false},{"text":"Yes, because the for section does not expose its scope.","answer":false,"code":false},{"text":"No, because for-yield shares the same scope, even though they are within separate curly braces.","answer":true,"code":false},{"text":"Yes, because they are within different curly braces.","answer":false,"code":false}]},{"id":12,"question":"What is one way to implement pattern matching on methods?","code":"Note: ambiguous question, it's not clear what kind of [pattern matching](https://docs.scala-lang.org/tour/pattern-matching.html) is meant here.","reference":"Note: ambiguous question, it's not clear what kind of [pattern matching](https://docs.scala-lang.org/tour/pattern-matching.html) is meant here.","choices":[{"text":"using regex","answer":false,"code":false},{"text":"using monads","answer":false,"code":false},{"text":"using string matching","answer":false,"code":false},{"text":"using case classes","answer":false,"code":false}]},{"id":13,"question":"What is the value of z after executing this code?","code":"val y = List('a','b') val z = y::List('c')","reference":"```","choices":[{"text":"List(a,b,c)","answer":false,"code":false},{"text":"List(List(a, b), c)","answer":true,"code":false},{"text":"List(c,a,b)","answer":false,"code":false},{"text":"List(c,List(a,b))","answer":false,"code":false}]},{"id":14,"question":"What term is used to specify a precondition?","code":"","reference":"","choices":[{"text":"assert","answer":true,"code":false},{"text":"require","answer":false,"code":false},{"text":"precondition","answer":false,"code":false},{"text":"mustHave","answer":false,"code":false}]},{"id":15,"question":"Which Scala type may throw an exception or a successfully computed value, and is commonly used to trap and propagate errors?","code":"","reference":"","choices":[{"text":"`scala.util.ExceptionHandling`","answer":false,"code":false},{"text":"`scala.Catch.Throw`","answer":false,"code":false},{"text":"`scala.exception.TryFinally`","answer":false,"code":false},{"text":"`scala.util.Try`","answer":true,"code":false}]},{"id":16,"question":"What is the data type of y after this code is executed?","code":"val y = (math floor 3.1415 * 2)","reference":"```","choices":[{"text":"short","answer":false,"code":false},{"text":"double","answer":true,"code":false},{"text":"int","answer":false,"code":false},{"text":"bigInt","answer":false,"code":false}]},{"id":17,"question":"When using pattern matching, which character matches on any object?","code":"","reference":"","choices":[{"text":"`%`","answer":false,"code":false},{"text":"`_`","answer":true,"code":false},{"text":"`^`","answer":false,"code":false},{"text":"`-`","answer":false,"code":false}]},{"id":18,"question":"You have created an array using val. Can you change the value of any element of the arrayâ€”and why or why not?","code":"**Explanation**: scala val a1 = Array(1, 2, 3) a1{1} = 3 // OK a1 = Array(1, 3, 3) // error: reassignment to val","reference":"```","choices":[{"text":"Yes, the reference to the array is immutable, so the location that the array points to is immutable. The values in the array are mutable.","answer":true,"code":false},{"text":"The 0th element is immutable and cannot be modified. All other elements can be modified.","answer":false,"code":false},{"text":"Yes, val does not make arrays immutable.","answer":false,"code":false},{"text":"No, val makes the array and values of the array immutable.","answer":false,"code":false}]},{"id":19,"question":"What is the output of this function?","code":"scala def main () {      var a = 0      for (a<-1 until 5){println(a)}","reference":"```","choices":[{"text":"1,2,3,4,5","answer":false,"code":false},{"text":"0,1,2,3,4","answer":false,"code":false},{"text":"1,2,3,4","answer":true,"code":false},{"text":"2,3,4,5","answer":false,"code":false}]},{"id":20,"question":"What do you call objects with immutable state?","code":"**Note:** singletons may have mutable state","reference":"**Note:** singletons may have mutable state","choices":[{"text":"singletons","answer":false,"code":false},{"text":"stationary objects","answer":false,"code":false},{"text":"functional objects","answer":true,"code":false},{"text":"fixed objects","answer":false,"code":false}]},{"id":21,"question":"You have written a Scala script. How would you access command-line arguments in the script?","code":"","reference":"","choices":[{"text":"use array named args","answer":true,"code":false},{"text":"use tuple named args","answer":false,"code":false},{"text":"use numbered variables with a _ prefix for example _ 1, _ 2, _ 3","answer":false,"code":false},{"text":"use numbered variables with a $ prefix - for example $1, $2, $3","answer":false,"code":false}]},{"id":22,"question":"What does this code return? `val x = 3; if (x > 2) x = 4 else x = x*2`","code":"","reference":"","choices":[{"text":"4","answer":false,"code":false},{"text":"an error","answer":true,"code":false},{"text":"6","answer":false,"code":false},{"text":"3","answer":false,"code":false}]},{"id":23,"question":"Which statement returns a success or a failure indicator when you execute this code?","code":"`val MyFuture = Future {runBackgroundFunction() }`","reference":"`val MyFuture = Future {runBackgroundFunction() }`","choices":[{"text":"myFuture.onComplete","answer":true,"code":false},{"text":"myFuture(status)","answer":false,"code":false},{"text":"myFuture.Finished","answer":false,"code":false},{"text":"complete(myFuture)","answer":false,"code":false}]},{"id":24,"question":"To denote a parameter that may be repeated, what should you place after type?","code":"","reference":"","choices":[{"text":"`%`","answer":false,"code":false},{"text":"`&`","answer":false,"code":false},{"text":"`_`","answer":false,"code":false},{"text":"`-`","answer":true,"code":false}]},{"id":25,"question":"What is called when a superclass has more than one subclass in Scala?","code":"","reference":"","choices":[{"text":"polyinheritance","answer":false,"code":false},{"text":"multilevel inheritance","answer":false,"code":false},{"text":"multimode inheritance","answer":false,"code":false},{"text":"hierarchical inheritance","answer":true,"code":false}]},{"id":26,"question":"One way to improve code reliability is to use `__` , which will evaluate a condition and return an error if the condition is violated.","code":"","reference":"","choices":[{"text":"packages","answer":false,"code":false},{"text":"polymorphisms","answer":false,"code":false},{"text":"assertions","answer":true,"code":false},{"text":"traits","answer":false,"code":false}]},{"id":27,"question":"Which statement about if-else-if-else statements is true?","code":"","reference":"","choices":[{"text":"If the first else-if does not succeed, then no other else-ifs are tested.","answer":false,"code":false},{"text":"If an else-if does not succeed, then none of the remaining else-if statements or elses will be tested.","answer":false,"code":false},{"text":"All else-if statements are tested in all cases.","answer":false,"code":false},{"text":"If an else-if succeeds, then none of the remaining else-if statements or elses will tested.","answer":true,"code":false}]},{"id":28,"question":"What do you call the process of changing the definition of an inherited method?","code":"","reference":"","choices":[{"text":"recursive methods","answer":false,"code":false},{"text":"currying methods","answer":false,"code":false},{"text":"redefining methods","answer":false,"code":false},{"text":"overriding methods","answer":true,"code":false}]},{"id":29,"question":"To denote a parameter that may be repeated, what should you place after the type?","code":"","reference":"","choices":[{"text":"`_`","answer":false,"code":false},{"text":"`*`","answer":true,"code":false},{"text":"`%`","answer":false,"code":false},{"text":"`&`","answer":false,"code":false}]},{"id":30,"question":"What is the code below equivalent to?","code":"scala myClass.foreach(println _)","reference":"```","choices":[{"text":"`myClass.foreach(println ())`","answer":false,"code":false},{"text":"`myClass.foreach(print NIL)`","answer":false,"code":false},{"text":"`myClass.loop(println ())`","answer":false,"code":false},{"text":"`myClass.foreach(x => println(x))`","answer":true,"code":false}]},{"id":31,"question":"What is an advantage of an immutable object?","code":"","reference":"","choices":[{"text":"Immutable objects use less memory than their mutable counterparts.","answer":false,"code":false},{"text":"Immutable objects do not require error handling.","answer":false,"code":false},{"text":"Immutable objects can be used in classes, mutable objects cannot.","answer":false,"code":false},{"text":"Immutable objects are threadsafe.","answer":true,"code":false}]},{"id":32,"question":"You want to create an iteration loop that tests the condition at the end of the loop body. Which iteration would you use?","code":"","reference":"","choices":[{"text":"do-while loop","answer":true,"code":false},{"text":"while loop","answer":false,"code":false},{"text":"for loop","answer":false,"code":false},{"text":"do-until loop","answer":false,"code":false}]},{"id":33,"question":"What can you use to make querying a database more efficient, by avoiding the need to parse the SQL string every time a query is executed from Scala?","code":"","reference":"","choices":[{"text":"database driver","answer":false,"code":false},{"text":"connection","answer":false,"code":false},{"text":"prepared statement","answer":true,"code":false},{"text":"SQL view","answer":false,"code":false}]},{"id":34,"question":"Which is _not_ a member of the collections hierarchy?","code":"","reference":"","choices":[{"text":"Set","answer":false,"code":false},{"text":"Seq","answer":false,"code":false},{"text":"Hash","answer":true,"code":false},{"text":"Map","answer":false,"code":false}]},{"id":35,"question":"Which term makes the contents of packages available without prefixing?","code":"","reference":"","choices":[{"text":"use","answer":false,"code":false},{"text":"include","answer":false,"code":false},{"text":"import","answer":true,"code":false},{"text":"assertion","answer":false,"code":false}]},{"id":36,"question":"If you wanted to find the remainder after division, what operator would you use?","code":"","reference":"","choices":[{"text":"%","answer":true,"code":false},{"text":"DIV","answer":false,"code":false},{"text":"//","answer":false,"code":false},{"text":"/","answer":false,"code":false}]},{"id":37,"question":"What are defined inside a class definition?","code":"","reference":"","choices":[{"text":"method","answer":false,"code":false},{"text":"fields and methods","answer":true,"code":false},{"text":"fields, methods, and packages","answer":false,"code":false},{"text":"fields","answer":false,"code":false}]},{"id":38,"question":"What defines methods and fields that can then be reused by mixing into classes?","code":"","reference":"","choices":[{"text":"singleton","answer":false,"code":false},{"text":"assertion","answer":false,"code":false},{"text":"trait","answer":true,"code":false},{"text":"monad","answer":false,"code":false}]},{"id":39,"question":"When do you need to explicitly state the return type in a function definition?","code":"","reference":"","choices":[{"text":"when the function has no side effects","answer":false,"code":false},{"text":"when the function returns a Unit type","answer":false,"code":false},{"text":"when the function is recursive","answer":true,"code":false},{"text":"when the function has side effects","answer":false,"code":false}]},{"id":40,"question":"Why would you make a field private?","code":"","reference":"","choices":[{"text":"so only methods in the same file can access the field","answer":false,"code":false},{"text":"so only methods in the same package can access the field","answer":false,"code":false},{"text":"so only methods in the same class could access the field","answer":true,"code":false},{"text":"so only methods defined in a Java class can access the field","answer":false,"code":false}]},{"id":41,"question":"What's the difference between `.equals` and `==`?","code":"","reference":"","choices":[{"text":"They do the exact same thing","answer":false,"code":false},{"text":"`==` won't work on objects","answer":false,"code":false},{"text":"`==` cannot be applied to `String`","answer":false,"code":false},{"text":"`==` is a wrapper of `.equals()` and checks for nulls","answer":true,"code":false}]},{"id":42,"question":"What is denotes the intersection between two sets?","code":"","reference":"","choices":[{"text":"||","answer":false,"code":false},{"text":"&&","answer":false,"code":false},{"text":"&","answer":true,"code":false},{"text":"%","answer":false,"code":false}]},{"id":43,"question":"What's the best way to execute code in the background in a separate thread?","code":"","reference":"","choices":[{"text":"AltFuture","answer":false,"code":false},{"text":"Future","answer":false,"code":false},{"text":"AltProcess","answer":false,"code":false},{"text":"AltThread","answer":false,"code":false}]},{"id":44,"question":"What do you call a function defined in a block?","code":"","reference":"","choices":[{"text":"private function","answer":false,"code":false},{"text":"block function","answer":false,"code":false},{"text":"local function","answer":false,"code":false},{"text":"method","answer":false,"code":false}]},{"id":45,"question":"What do you call a Scala method that is parametrized by type as well as by value?","code":"","reference":"","choices":[{"text":"multimode method","answer":false,"code":false},{"text":"polymorphic method","answer":false,"code":false},{"text":"closure","answer":false,"code":false},{"text":"collection method","answer":false,"code":false}]},{"id":46,"question":"What type of exception is thrown when a precondition is violated?","code":"","reference":"","choices":[{"text":"IllegalArgumentException","answer":true,"code":false},{"text":"NumberFormatException","answer":false,"code":false},{"text":"NullPointerExcepetion","answer":false,"code":false},{"text":"MalformedParameterException","answer":false,"code":false}]},{"id":47,"question":"In scala what is precondition?","code":"","reference":"","choices":[{"text":"a constraint on where a method may be called from","answer":false,"code":false},{"text":"a constraint on values passed to a methode constructor","answer":false,"code":false},{"text":"a class of predifined error messages","answer":true,"code":false},{"text":"a class of Boolean operators","answer":false,"code":false}]},{"id":48,"question":"What would you change in this code to make it execute in parallel?","code":"val myNums = (1 to 500).toList  list.map(_ + 1)","reference":"```","choices":[{"text":"Change **list.map** to **list.par.map.**","answer":true,"code":false},{"text":"Change **toList** to **toListPar**","answer":false,"code":false},{"text":"Change **val** to **val.par**","answer":false,"code":false},{"text":"Change **toList** to **toParallelList**","answer":false,"code":false}]},{"id":49,"question":"What is a free variable?","code":"","reference":"","choices":[{"text":"a variable defined outside a function","answer":true,"code":false},{"text":"a variable referenced in a function that is not assigned a value by that function","answer":false,"code":false},{"text":"a variable that has a global scope","answer":false,"code":false},{"text":"a variable defined in a class and available to all methods in that class","answer":false,"code":false}]},{"id":50,"question":"What is the difference between .equals() and == ?","code":"","reference":"","choices":[{"text":"**==** is wrapper of **.equals()** and checks for Nulls","answer":true,"code":false},{"text":"They do the exact same thing.","answer":false,"code":false},{"text":"== cannot be applied to String.","answer":false,"code":false},{"text":"== won't work on objects","answer":false,"code":false}]},{"id":51,"question":"What's the best way to execute code in the background in a separate thread?","code":"","reference":"","choices":[{"text":"AltThread","answer":false,"code":false},{"text":"AltFuture","answer":false,"code":false},{"text":"AltProcess","answer":false,"code":false},{"text":"Future","answer":true,"code":false}]},{"id":52,"code":"scala x= List(1,2,4); x(1)?","reference":"```","choices":[{"text":"(1,2,4)","answer":false,"code":false},{"text":"1","answer":false,"code":false},{"text":"Nil","answer":false,"code":false},{"text":"2","answer":true,"code":false}]}]