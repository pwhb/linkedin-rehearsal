[{"id":1,"question":"Which Code sample will eventually cause the computer to run out of memory?","code":"c while(1) {     char *smallString = (char *) malloc(10); }  c long long number = 1;     while(1)     number *= 2;  c while(1) {     char hugeString[1000000L];     memset(hugeString, 0, 1000000L); }  c while(1) {     long *bigArray = (long *) malloc(sizeof(long) * 1000);     memset(bigArray, 1000000, 1000);     free(bigArray); }","reference":"```","choices":[null,null,null,null],"answer":[0]},{"id":2,"question":"What will this code print on the screen?","code":"c int f1 (int a, int b) {     if (a > b)     {         printf(\"A is greater than Bn\");         return 1;     }     else     {         printf(\"B is greater than A\");         return 0;     } } main() {     if (f1(20,10) || f1(10,20))         printf(\"C is fun!n\"); }   A is greater then B C is fun!   A is greater then B B is greater then A C is fun!   A is greater then B B is greater then A","reference":"```","choices":[null,null,null,"Nothing is printed on Screen"],"answer":[0]},{"id":3,"question":"What is the name for calling a function inside the same function?","code":"","reference":"","choices":["recursion","subfunction","inner call","infinite loop"],"answer":[0]},{"id":4,"question":"What does the declaration of variable c2 demonstrate?","code":"c main(){     char c1 ='a';     char c2 = c1+10; }","reference":"```","choices":["character arithmetic","undefined assignment","type conversion","invalid declaration"],"answer":[0]},{"id":5,"question":"A pointer to void named vptr, has been set to point to a floating point variable named g. What is the valid way to dereference vptr to assign its pointed value to a float variable named f later in this program?","code":"c float g; void *vptr=&g;","reference":"```","choices":["f = _(float _)vptr;","f = (float *)vptr;","f = *(float *)vptr;","f = *(float)vptr;"],"answer":[2]},{"id":6,"question":"What is this declaration an example of?","code":"c struct s {     int i;     struct s *s1;     struct s *s2; };","reference":"```","choices":["a node","a linked list","a stack","a binary tree"],"answer":[0]},{"id":7,"question":"A C header file is a file with extension .h that contains function declarations and macro definitons to be shared between several source files. Header files are listed using the preprocessing directive #include, and can have one of the following formats: #include &lt;fileA&gt; or #include \"fileB\". What is the difference between these two formats?","code":"","reference":"","choices":["The preprocessor will try to locate the fileA in same directory as the source file, and the fileB in a predetermined directory path.","The preprocessor will try to locate the fileA in the fixed system directory. It will try to locate fileB in the directory path designated by the -l option added to the command line while compiling the source code.","The file using fileA syntax must be system files, of unlimited number. fileB must be a user file at a maximun of one per source file.","The preprocessor will try to locate the fileA in a predetermined directory path. It will try to locate fileB in the same directory as the source file along with a custom directory path."],"answer":[3]},{"id":8,"question":"Using a for loop, how could you write a C code to count down from 10 to 1 and display each number on its own line?","code":"c for (int i = 0; i>=0, i--){     printf(\"%dn\", i); }//end of loop  c int i; for (i=1; i<=10; i++){     printf(\"%d\", i); }  c int i = 10; while (i>0){     printf(\"%dn\", i);     i--; }  c int i; for (i= 10; i>0; i--){     printf(\"%dn\", i); }// end of loop","reference":"```","choices":[null,null,null,null],"answer":[3]},{"id":9,"question":"What is not one of the reserved words in standard C?","code":"","reference":"","choices":["volatile","typeof","register","typedef"],"answer":[1]},{"id":10,"question":"What does the program shown below return?","code":"c int main(){     int a=1, b=2, c=3, d=4;     int x = a;     if (a>b)     if (b<c) x=b;     else x=c;     return(x); }","reference":"```","choices":["1","3","2","0"],"answer":[0]},{"id":11,"question":"Using the Union declaration below, how many bytes of memory space will the data of this type occupy?","code":"c union Cars {     char make[20];     char model[30];     short year; } car;","reference":"```","choices":["32","54","30","52"],"answer":[2]},{"id":12,"question":"In this code sample, what is not a problem for C compiler?","code":"c main(){     constant int PI = 3.14;     printf(\"%fn\", pi); }","reference":"```","choices":["The value of PI needs to be set to 3.141593, not 3.14","The declaration of PI needs to say const, not constant.","The data type of PI needs to be float not int.","The printf statement needs to use PI, not pi."],"answer":[0]},{"id":13,"question":"Which is the smallest program to compile and run without errors?","code":"","reference":"","choices":["main()","int main() {return 0;}","main() { }","main() { ; }"],"answer":[2]},{"id":14,"question":"What is optional in a function declaration?","code":"","reference":"","choices":["data type of parameters","return type of function","parameter names","number of parameters"],"answer":[2]},{"id":15,"question":"C treats all devices, such as the display and the keyboard, as files. Which files opens automatically when a program executes?","code":"","reference":"","choices":["stdout","stdio.h","default.h","string.h"],"answer":[0]},{"id":16,"question":"In which segment does dynamic memory allocation takes place?","code":"","reference":"","choices":["BSS Segment","stack","heap","data segment"],"answer":[2]},{"id":17,"question":"Which of the following do you use to deallocate memory?","code":"","reference":"","choices":["dalloc()","dealloc()","release()","free()"],"answer":[3]},{"id":18,"question":"In C language what are the basic building blocks that are constructed together to write a program?","code":"","reference":"","choices":["keywords","identifiers","tokens","functions"],"answer":[2]},{"id":19,"question":"When is memory for a variable allocated?","code":"","reference":"","choices":["during the assigment of the variable","during the initialization of the variable","during the declaration of the variable","during the definition of the variable"],"answer":[2]},{"id":20,"question":"By default c uses the call by value method to pass arguments to functions. How can you invoke the call by reference method?","code":"","reference":"","choices":["by using pointers","by declaring functions separately from defining them","by using recursive functions","by using global variables"],"answer":[0]},{"id":21,"question":"A union allows you to store different `___` in the same `___`.","code":"","reference":"","choices":["Objects; Structure","Variables; Declaration","Data types; Memory location","Arrays; Header file"],"answer":[2]},{"id":22,"question":"What is the output of this program?","code":"c main() {     char c1='a' , c2='A';     int i=c2-c1;     printf(\"%d\", i); }","reference":"```","choices":["32","Runtime error","-32","0"],"answer":[2]},{"id":23,"question":"What is the difference between scanf() and sscanf() functions?","code":"","reference":"","choices":["The scanf() function reads data formatted as a string; The sscanf() function reads string input from the screen.","The scanf() function reads formatted data from the keyboard; The sscanf() function reads formatted input from a string.","The scanf() function reads string data from the keyboard; The sscanf() function reads string data from a string.","The scanf() function reads formatted data from a file; The sscanf() function reads input from a selected string"],"answer":[1]},{"id":24,"question":"What is not a valid command with this declaration?","code":"c char *string[20] = { \"one\", \"two\", \"three\"};","reference":"```","choices":["`printf(\"%c\", string[1][2]);`","`printf(\"%s\", string[1][2]);`","`printf(\"%s\", string[1]);`","`printf(string[1]);`"],"answer":[1]},{"id":25,"question":"What is the expression player->name equivalent to?","code":"","reference":"","choices":["`player.name`","`(*player).name`","`*player.name`","`player.*name`"],"answer":[1]},{"id":26,"question":"Which program will compile and run without errors?","code":"c main() {     for(i=0; i<10; i++) ; }  c main() { int i=0;     for(; i<10; i++) ; }  c main() {     int i;     for(i=0; i<j; i++) ; }  c main() { int i;     for (i= 10; i<10; i++) }","reference":"```","choices":[null,null,null,null],"answer":[1]},{"id":27,"question":"What does this function call return?","code":"c 1 main() { float x = f1(10, 5); } 2 float f1(int a, int b) { return (a/b); }","reference":"```","choices":["2","2.000000","a runtime error","a compiler error"],"answer":[3]},{"id":28,"question":"What does this program create?","code":"c #include <stdio.h> int main() {     int *p = NULL;     return 0; }","reference":"```","choices":["a runtime error","a NULL pointer","a compile error","a void pointer"],"answer":[1]},{"id":29,"question":"What is an alternative way to write the expression (*x).y?","code":"","reference":"","choices":["There is no equivalent.","x->y","*x->y","y->x"],"answer":[1]},{"id":30,"question":"Compile time errors are static errors that can be found where in the code?","code":"","reference":"","choices":["in declarations and definitions","in functions and expressions","in syntax and semantics","in objects and statements"],"answer":[0]},{"id":31,"question":"File input and output (I/O) in C is heavily based on the way it is done `___`?","code":"","reference":"","choices":["in Unix","in C++","in C#","in DOS"],"answer":[0]},{"id":32,"question":"What does the strcmp(str1, str2); function return?","code":"","reference":"","choices":["0 if str1 and str2 are the same, a negative number if str1 is less than str2, a positive number if str1 is greater than str2","true (1) if str1 and str2 are the same, false (0) if str1 and str2 are not the same","true (1) if str1 and str2 are the same, NULL if str1 and str2 are not the same","0 if str1 and str2 are the same, a negative number if str2 is less than str1, a positive number if str2 is greater than str1"],"answer":[0]},{"id":33,"question":"What is the output of this program?","code":"c int a=10, b=20; int f1(a) { return(a*b); } main() { printf(\"%d\", f1(5)); }","reference":"```","choices":["100","200","5","50"],"answer":[0]},{"id":34,"question":"Which is _not_ a correct way to declare a string variable?","code":"","reference":"","choices":["`char *string = \"Hello World\";`","`char string = \"Hello World\";`","`char string[20","`char string["],"answer":[1]},{"id":35,"question":"Which choice is an include guard for the header file mylib.h?","code":"c #ifdef MYLIB_H #undef MYLIB_H // mylib.h content #endif /* MYLIB_H */  c #ifndef MYLIB_H #define MYLIB_H // mylib.h content #endif /* MYLIB_H */  c #define MYLIB_H #include \"mylib.h\" #undef MYLIB_H  c #ifdef MYLIB_H #define MYLIB_H // mylib.h content #endif /* MYLIB_H */","reference":"```","choices":[null,null,null,null],"answer":[1]},{"id":36,"question":"How many times does the code inside the while loop get executed in this program?","code":"c main(){  int x=1;  while(x++<100){     x*=x;     if(x<10) continue;     if(x>50) break  } }","reference":"```","choices":["100","3","5","50"],"answer":[1]},{"id":37,"question":"File input and output (I/O) in C is done through what?","code":"","reference":"","choices":["syntax-driven components","native interfaces","system objects","function calls"],"answer":[3]},{"id":38,"question":"Directives are translated by the?","code":"","reference":"","choices":["Pre-processor","Compiler","Linker","Editor"],"answer":[0]},{"id":39,"question":"The main loop structures in C programming are the for loop, the while loop, and which other loop?","code":"","reference":"","choices":["do...while","for...in","repeat...until","do...until"],"answer":[0]},{"id":40,"question":"By default, C Functions are what type of functions?","code":"","reference":"","choices":["global","static","library","system"],"answer":[2]},{"id":41,"question":"You have written a function that you want to include as a member of structure a. How is such as structure member defiened?","code":"c struct a {     void *f1; };  c struct a {     void (*f1)(); };  c struct a {     *(void *f1)(); };  c struct a {     void *f1(); };","reference":"```","choices":[null,null,null,null],"answer":[0]},{"id":42,"question":"A Stack data structure allows all data operations at one end only, making it what kind of an implementation?","code":"","reference":"","choices":["FIFO","LIFO","LILO","LOLI"],"answer":[1]},{"id":43,"question":"What does this program display?","code":"c main(){     char *p = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";     int i;     for (i=0;i<5;i++) *p++; *p++;     printf(\"%c\",*p++); }","reference":"```","choices":["K","M","H","G"],"answer":[3]},{"id":44,"question":"Describe the relationship between lvalue and rvalue.","code":"","reference":"","choices":["An lvalue may appear only on the left-hand side of an assignment; an rvalue may appear only on the right-hand side.","An lvalue may appear only on the left-hand side of an assignment; an rvalue may appear on either the left-hand or right-hand side.","An lvaue and an rvalue may appear on either left-hand or right-hand side of an assignment.","An lvalue may appear on the left-hand or right-hand side of an assignment; an rvalue may appear only on the right-hand side."],"answer":[3]},{"id":45,"question":"Which operator is used to access the address of a variable?","code":"","reference":"","choices":["`%`","`**`","`*`","`&`"],"answer":[3]},{"id":46,"question":"Which add function properly returns the updated value of result?","code":"c void add (int a, int b, int *result) {     *result = a+b; } main() {     int a = 10;     int b = 20;     int result = 0;     add(a,b,&result); }  c void add (int a, int b, int result) {     result = a+b; } main() {     int a = 10;     int b = 20;     int result = 0;     add(a,b,result); }  c void add (int a, int b, int *result) {     result = a+b; } main() {     int a = 10;     int b = 20;     int result = 0;     add(a,b,result); }  c void add (int *a, int *b, int *result) {     result = a+b; } main() {     int a = 10;     int b = 20;     int result = 0;     add(*a,*b,*result); }","reference":"```","choices":[null,null,null,null],"answer":[0]},{"id":47,"question":"Consider the number of the Fibonacci series below 100: 0,1,1,2,3,5,8,13,21,34,55,89. Which piece of code outputs the sequence?","code":"c void fibonacci(int a, int b) {     int c = a+b;     if(a>100)        return;     printf(\"%d\", a);     fibonacci(a,b); } int main() {     fibonacci(0,1); }  c void fibonacci(int a, int b) {     int c = a+b;     if(a>100)        return;     printf(\"%d\", b);     fibonacci(a,c); } int main() {     fibonacci(0,1); }  c void fibonacci(int a, int b) {     int c = a+b;     if(a>100)        return;     printf(\"%d\", a);     fibonacci(b,c); } int main() {     fibonacci(0,1); }  c void fibonacci(int a, int b) {     int c = a+b;     if(a>100)        return;     printf(\"%d\", c);     fibonacci(b,c); } int main() {     fibonacci(0,1); }","reference":"```","choices":[null,null,null,null],"answer":[2]}]