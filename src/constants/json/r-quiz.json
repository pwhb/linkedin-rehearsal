[{"id":1,"question":"How does a matrix differ from a data frame?","code":"","reference":"","choices":[{"text":"A matrix may contain numeric values only.","answer":false,"code":false},{"text":"A matrix must not be singular.","answer":false,"code":false},{"text":"A data frame may contain variables that have different modes.","answer":true,"code":false},{"text":"A data frame may contain variables of different lengths.","answer":false,"code":false}]},{"id":2,"question":"What value does this statement return?","code":"`unclass(as.Date(\"1971-01-01\"))`","reference":"`unclass(as.Date(\"1971-01-01\"))`","choices":[{"text":"1","answer":false,"code":false},{"text":"365","answer":true,"code":false},{"text":"4","answer":false,"code":false},{"text":"12","answer":false,"code":false}]},{"id":3,"question":"What do you use to take an object such as a data frame out of the workspace?","code":"","reference":"","choices":[{"text":"remove()","answer":true,"code":false},{"text":"erase()","answer":false,"code":false},{"text":"detach()","answer":false,"code":false},{"text":"delete()","answer":false,"code":false}]},{"id":4,"question":"Review the following code. What is the result of line 3?","code":"xvect<-c(1,2,3) xvect[2] <- \"2\" xvect","reference":"```","choices":[{"text":"[1","answer":false,"code":false},{"text":"[1","answer":false,"code":false},{"text":"[1","answer":true,"code":false},{"text":"[1","answer":false,"code":false}]},{"id":5,"question":"The variable height is a numeric vector in the code below. Which statement returns the value 35?","code":"","reference":"","choices":[{"text":"`height(length(height))`","answer":false,"code":false},{"text":"`height[length(height)]`","answer":true,"code":false},{"text":"`height[length[height]]`","answer":false,"code":false},{"text":"`height(5)`","answer":false,"code":false}]},{"id":6,"question":"In the image below, the data frame is named rates. The statement `sd(rates[, 2])` returns 39. As what does R regard Ellen's product ratings?","code":"![Image](https://i.ibb.co/jvPPSRk/Captura-de-pantalla-2020-07-14-a-las-20-58-09.png)","reference":"![Image](https://i.ibb.co/jvPPSRk/Captura-de-pantalla-2020-07-14-a-las-20-58-09.png)","choices":[{"text":"sample with replacement","answer":false,"code":false},{"text":"population","answer":false,"code":false},{"text":"trimmed sample","answer":false,"code":false},{"text":"sample <-- not sure","answer":true,"code":false}]},{"id":7,"question":"Which choice does R regard as an acceptable name for a variable?","code":"","reference":"","choices":[{"text":"`Var_A!`","answer":false,"code":false},{"text":"`_VarA`","answer":false,"code":false},{"text":"`.2Var_A`","answer":false,"code":false},{"text":"`Var2_A`","answer":true,"code":false}]},{"id":8,"question":"What is the principal difference between an array and a matrix?","code":"","reference":"","choices":[{"text":"A matrix has two dimensions, while an array can have three or more dimensions.","answer":true,"code":false},{"text":"An array is a subtype of the data frame, while a matrix is a separate type entirely.","answer":false,"code":false},{"text":"A matrix can have columns of different lengths, but an array's columns must all be the same length.","answer":false,"code":false},{"text":"A matrix may contain numeric values only, while an array can mix different types of values.","answer":false,"code":false}]},{"id":9,"question":"Which is not a property of lists and vectors?","code":"","reference":"","choices":[{"text":"type","answer":false,"code":false},{"text":"length","answer":false,"code":false},{"text":"attributes","answer":false,"code":false},{"text":"scalar","answer":true,"code":false}]},{"id":10,"question":"In the image below, the data frame on lines 1 through 4 is named StDf. State and Capital are both factors. Which statement returns the results shown on lines 6 and 7?","code":"![Image](https://i.ibb.co/8DL1HCV/Captura-de-pantalla-2020-07-14-a-las-18-33-34.png)","reference":"![Image](https://i.ibb.co/8DL1HCV/Captura-de-pantalla-2020-07-14-a-las-18-33-34.png)","choices":[{"text":"StDf[1:2,-3]","answer":false,"code":false},{"text":"StDf[1:2,1]","answer":true,"code":false},{"text":"StDf[1:2,]","answer":false,"code":false},{"text":"StDf[1,2,]","answer":false,"code":false}]},{"id":11,"question":"Which function displays the first five rows of the data frame named pizza?","code":"","reference":"","choices":[{"text":"BOF(pizza, 5)","answer":false,"code":false},{"text":"first(pizza, 5)","answer":false,"code":false},{"text":"top(pizza, 5)","answer":false,"code":false},{"text":"head(pizza, 5)","answer":true,"code":false}]},{"id":12,"question":"You accidentally display a large data frame on the R console, losing all the statements you entered during the current session. What is the best way to get the prior 25 statements back?","code":"","reference":"","choices":[{"text":"console(-25)","answer":false,"code":false},{"text":"console(reverse=TRUE)","answer":false,"code":false},{"text":"history()","answer":false,"code":false},{"text":"history(max.show = 25)","answer":true,"code":false}]},{"id":13,"question":"d.pizza is a data frame. It's a column named temperature contains only numbers. If you extract temperature using the [] accessors, its class defaults to numeric. How can you access temperature so that it retains the class of data.frame?","code":"> class( d.pizza[ , \"temperature\" ] ) > \"numeric\"","reference":"```","choices":[{"text":"`class( d.pizza( , \"temperature\" ) )`","answer":false,"code":false},{"text":"`class( d.pizza[ , \"temperature\" ","answer":false,"code":false},{"text":"`class( d.pizza$temperature )`","answer":false,"code":false},{"text":"`class( d.pizza[ , \"temperature\", drop=F ","answer":true,"code":false}]},{"id":14,"question":"What does c contain?","code":"a <- c(3,3,6.5,8) b <- c(7,2,5.5,10) c <- a < b","reference":"```","choices":[{"text":"[1","answer":false,"code":false},{"text":"[1","answer":false,"code":false},{"text":"[1","answer":false,"code":false},{"text":"[1","answer":true,"code":false}]},{"id":15,"question":"Review the statements below. Does the use of the dim function change the class of y, and if so what is y's new class?","code":"> y <- 1:9 > dim(y) <- c(3,3)","reference":"```","choices":[{"text":"No, y's new class is \"array\".","answer":false,"code":false},{"text":"Yes, y's new class is \"matrix\".","answer":true,"code":false},{"text":"No, y's new class is \"vector\".","answer":false,"code":false},{"text":"Yes, y's new class is \"integer\".","answer":false,"code":false}]},{"id":16,"question":"What is `mydf$y` in this code?","code":"`mydf <- data.frame(x=1:3, y=c(\"a\",\"b\",\"c\"), stringAsFactors=FALSE)`","reference":"`mydf <- data.frame(x=1:3, y=c(\"a\",\"b\",\"c\"), stringAsFactors=FALSE)`","choices":[{"text":"list","answer":false,"code":false},{"text":"string","answer":false,"code":false},{"text":"factor","answer":false,"code":false},{"text":"character vector","answer":true,"code":false}]},{"id":17,"question":"How does a vector differ from a list?","code":"","reference":"","choices":[{"text":"Vectors are used only for numeric data, while lists are useful for both numeric and string data.","answer":false,"code":false},{"text":"Vectors and lists are the same thing and can be used interchangeably.","answer":false,"code":false},{"text":"A vector contains items of a single data type, while a list can contain items of different data types.","answer":true,"code":false},{"text":"Vectors are like arrays, while lists are like data frames.","answer":false,"code":false}]},{"id":18,"question":"What statement shows the objects on your workspace?","code":"","reference":"","choices":[{"text":"list.objects()","answer":false,"code":false},{"text":"print.objects()","answer":false,"code":false},{"text":"getws()","answer":false,"code":false},{"text":"ls()","answer":true,"code":false}]},{"id":19,"question":"What function joins two or more column vectors to form a data frame?","code":"","reference":"","choices":[{"text":"rbind()","answer":false,"code":false},{"text":"cbind()","answer":true,"code":false},{"text":"bind()","answer":false,"code":false},{"text":"coerce()","answer":false,"code":false}]},{"id":20,"question":"Review line 1 below. What does the statement in line 2 return?","code":"1 mylist <- list(1,2,\"C\",4,5) 2 unlist(mylist)","reference":"```","choices":[{"text":"[1","answer":false,"code":false},{"text":"\"C\"","answer":false,"code":false},{"text":"[1","answer":true,"code":false},{"text":"[1","answer":false,"code":false}]},{"id":21,"question":"What is the value of y in this code?","code":"x <- NA y <- x/1","reference":"```","choices":[{"text":"Inf","answer":false,"code":false},{"text":"Null","answer":false,"code":false},{"text":"NaN","answer":false,"code":false},{"text":"NA","answer":true,"code":false}]},{"id":22,"question":"Two variable in the mydata data frame are named Var1 and Var2. How do you tell a bivariate function, such as cor.test, which two variables you want to analyze?","code":"","reference":"","choices":[{"text":"`cor.test(Var1 ~ Var2)`","answer":false,"code":false},{"text":"`cor.test(mydata$(Var1,Var2))`","answer":false,"code":false},{"text":"`cor.test(mydata$Var1,mydata$Var2)`","answer":true,"code":false},{"text":"`cor.test(Var1,Var2, mydata)`","answer":false,"code":false}]},{"id":23,"question":"A data frame named d.pizza is part of the DescTools package. A statement is missing from the following R code and an error is therefore likely to occur. Which statement is missing?","code":"library(DescTools) deliver <- aggregate(count,by=list(area,driver), FUN=mean) print(deliver)","reference":"```","choices":[{"text":"`attach(d.pizza)`","answer":true,"code":false},{"text":"`summarize(deliver)`","answer":false,"code":false},{"text":"`mean <- rbind(d.pizza,count)`","answer":false,"code":false},{"text":"`deliver[!complete.cases(deliver),]`","answer":false,"code":false}]},{"id":24,"question":"How to name rows and columns in DataFrames and Matrices F in R?","code":"","reference":"","choices":[{"text":"data frame: names() and rownames() matrix: colnames() and row.names()","answer":false,"code":false},{"text":"data frame: names() and row.names() matrix: dimnames() (not sure)","answer":true,"code":false},{"text":"data frame: colnames() and row.names() matrix: names() and rownames()","answer":false,"code":false},{"text":"data frame: colnames() and rownames() matrix: names() and row.names()","answer":false,"code":false}]},{"id":25,"question":"Which set of two statements-followed by the cbind() function-results in a data frame named vbound?","code":"v1<-list(1,2,3) v2<-list(c(4,5,6)) vbound<-cbind(v1,v2)   v1<-c(1,2,3) v2<-list(4,5,6)) vbound<-cbind(v1,v2)   v1<-c(1,2,3) v2<-c(4,5,6)) vbound<-cbind(v1,v2)","choices":[{"text":"\nv1<-list(1,2,3)\nv2<-list(c(4,5,6))\nvbound<-cbind(v1,v2)\n","code":true,"answer":false},{"text":"\nv1<-c(1,2,3)\nv2<-list(4,5,6))\nvbound<-cbind(v1,v2)\n","code":true,"answer":false},{"text":"\nv1<-c(1,2,3)\nv2<-c(4,5,6))\nvbound<-cbind(v1,v2)\n","code":true,"answer":false}]},{"id":26,"question":"ournames is a character vector. What values does the statement below return to Cpeople?","code":"`Cpeople <- ournames %in% grep(\"^C\", ournames, value=TRUE)`","reference":"`Cpeople <- ournames %in% grep(\"^C\", ournames, value=TRUE)`","choices":[{"text":"records where the first character is a C","answer":false,"code":false},{"text":"any record with a value containing a C","answer":false,"code":false},{"text":"TRUE or FALSE, depending on whether any character in ournames is C","answer":false,"code":false},{"text":"TRUE and FALSE values, depending on whether the first character in an ournames record is C","answer":true,"code":false}]},{"id":27,"question":"What is the value of names(v[4])?","code":"v <- 1:3 names(v) <- c(\"a\", \"b\", \"c\") v[4] <- 4","reference":"```","choices":[{"text":"\"\"","answer":true,"code":false},{"text":"d","answer":false,"code":false},{"text":"NULL","answer":false,"code":false},{"text":"NA","answer":false,"code":false}]},{"id":28,"question":"Which of the following statements doesn't yield the code output below. Review the following code. What is the result of line 3?","code":"x <- c(1, 2, 3, 4) Output: [1] 2 3 4","reference":"```","choices":[{"text":"x[c(2, 3, 4)]","answer":false,"code":false},{"text":"x[-1]","answer":false,"code":false},{"text":"x[c(-1, 0, 0, 0)]","answer":false,"code":false},{"text":"x[c(-1, 2, 3, 4)]","answer":true,"code":false}]},{"id":29,"question":"Given DFMerged <- merge(DF1, DF2) and the image below, how manu rows are in DFMerged?","code":"![image](https://user-images.githubusercontent.com/52632898/139964478-9806a163-76b2-4f99-97bc-c925fdf6e388.png)","reference":"![image](https://user-images.githubusercontent.com/52632898/139964478-9806a163-76b2-4f99-97bc-c925fdf6e388.png)","choices":[{"text":"6","answer":false,"code":false},{"text":"9","answer":false,"code":false},{"text":"3","answer":false,"code":false},{"text":"0","answer":true,"code":false}]},{"id":30,"question":"What does R return in response to the final statement?","code":"x<-5:8 names(x)<-letters[5:8] x        \"5\" \"6\" \"7\" \"8\"       5 6 7 8","reference":"      5 6 7 8","choices":[{"text":"e f g h","answer":false,"code":false},{"text":"5 6 7 8","answer":false,"code":false},{"text":"e f g h","answer":false,"code":false},{"text":"e f g h","answer":true,"code":false}]},{"id":31,"question":"How do you return \"October\" from x in this code?","code":"x<-as.Date(\"2018-10-01\")","reference":"```","choices":[{"text":"attr()","answer":false,"code":false},{"text":"months(x)","answer":true,"code":false},{"text":"as.month(x)","answer":false,"code":false},{"text":"month(x)","answer":false,"code":false}]},{"id":32,"question":"How will R respond to the last line of this code?","code":"fact<-factor(c(\"Rep\",\"Dem\",\"Dem\",\"Rep\")) fact Levels: Rep Dem fact[2]<-\"Ind\"","reference":"```","choices":[{"text":">","answer":false,"code":false},{"text":"[,2]Ind","answer":false,"code":false},{"text":"invalid factor level, NA generated","answer":true,"code":false},{"text":"Ind","answer":false,"code":false}]},{"id":33,"question":"What does R return?","code":"StartDate<- as.Date(\"2020/2/28\") StopDate<- as.Date(\"2020/3/1\") StopDate-StartDate","reference":"```","choices":[{"text":"\"1970-01-02\"","answer":false,"code":false},{"text":"time difference of one day","answer":false,"code":false},{"text":"time difference of two days","answer":true,"code":false},{"text":"error in x-y: nonnumeric argument to binary operator","answer":false,"code":false}]},{"id":34,"question":"What does the expression `mtrx * mtrx` do ?","code":"> mtrx <- matrix( c(3,5,8,4), nrow= 2,ncol=2,byrow=TRUE) > newmat <- mtrx * mtrx","reference":"```","choices":[{"text":"it transpose **mtrx**","answer":false,"code":false},{"text":"it premultiplies the current **netwmat** row by the **newmat** column.","answer":false,"code":false},{"text":"it returns the results of a matrix multiplication","answer":true,"code":false},{"text":"It squares each cell in **mtrx**","answer":false,"code":false}]},{"id":35,"question":"Which function in R combines different values into a single object?","code":"","reference":"","choices":[{"text":"connect()","answer":false,"code":false},{"text":"concat()","answer":false,"code":false},{"text":"contact()","answer":false,"code":false},{"text":"c()","answer":true,"code":false}]},{"id":36,"question":"Which file contains settings that R uses for all users of a given installation of R?","code":"","reference":"","choices":[{"text":"Rdefaults.site","answer":false,"code":false},{"text":"Renviron.site","answer":false,"code":false},{"text":"Rprofile.site","answer":true,"code":false},{"text":"Rstatus.site","answer":false,"code":false}]},{"id":37,"code":"","reference":"","choices":[{"text":"**ncol(mdf)** equals **length(mdf)**.","answer":true,"code":false},{"text":"The number of rows must equals the number of columns.","answer":false,"code":false},{"text":"The legnth of any column in **mdf** may differ from any other column in **mdf**","answer":false,"code":false},{"text":"All columns must have the same data type.","answer":false,"code":false}]},{"id":38,"code":"","reference":"","choices":[{"text":"vector(MyList, length = 7)","answer":false,"code":false},{"text":"coerce(MyList, nrows = 1)","answer":false,"code":false},{"text":"unlist(MyList)","answer":true,"code":false},{"text":"coerce(MyList, nrows = 7)","answer":false,"code":false}]},{"id":39,"code":"","reference":"","choices":[{"text":"ANOVAData, anovadata","answer":false,"code":false},{"text":"VisitPCA, VarX","answer":true,"code":false},{"text":"VisitPCA, varx","answer":false,"code":false},{"text":"Xvar, Yvar","answer":false,"code":false}]},{"id":40,"code":"r StDf[, -1]","reference":"```","choices":[{"text":"all but the first row and first column of StDf","answer":false,"code":false},{"text":"all but the final column of StDf","answer":false,"code":false},{"text":"all but the first column of StDf","answer":true,"code":false},{"text":"only the first column of StDf","answer":false,"code":false}]},{"id":41,"code":"","reference":"","choices":[{"text":"file.list()","answer":false,"code":false},{"text":"file.select()","answer":false,"code":false},{"text":"file.choose()","answer":true,"code":false},{"text":"file.open()","answer":false,"code":false}]},{"id":42,"code":"","reference":"","choices":[{"text":"Each is a type of data frame.","answer":false,"code":false},{"text":"Each is a type of atomic vector.","answer":true,"code":false},{"text":"Each is a type of complex vector.","answer":false,"code":false},{"text":"Each is a type of raw vector.","answer":false,"code":false}]},{"id":43,"code":"r MyMat = matrix(c(7, 9, 8, 6, 10, 12),nrow=2,ncol=3, byrow = TRUE)","choices":[{"text":"\n[ ,3]\n[1, ] 8\n[2, ] 12\n","code":true,"answer":false},{"text":"\n[1] 8 12\n","code":true,"answer":true},{"text":"\n[1] 10 12\n","code":true,"answer":false},{"text":"\n[ ,3]\n[1, ] 10\n[2, ] 12\n","code":true,"answer":false}]},{"id":44,"code":"","reference":"","choices":[{"text":"the probability of making a Type I error","answer":false,"code":false},{"text":"the probability of not making a Type II error","answer":true,"code":false},{"text":"the probability of making a Type II error","answer":false,"code":false},{"text":"the probability of not making a Type I error","answer":false,"code":false}]},{"id":45,"code":"r result <- lm(outcome ~ covariate + factor + covariate:factor, data = testcoef)","reference":"```","choices":[{"text":"It forces the intercepts of the individual regressions to zero.","answer":false,"code":false},{"text":"It calls for the effect of the covariate within each level of the factor.","answer":false,"code":false},{"text":"It calls for the effect of each variable from covariate to factor in testcoef.","answer":false,"code":false},{"text":"It forces the covariate to enter the equation before the factor levels.","answer":false,"code":false}]},{"id":46,"code":"","reference":"","choices":[{"text":"integers and real values","answer":false,"code":false},{"text":"integers, real, and raw values","answer":false,"code":false},{"text":"real values only","answer":true,"code":false},{"text":"integers, real, and logical values","answer":false,"code":false}]},{"id":47,"code":"","reference":"","choices":[{"text":"property","answer":false,"code":false},{"text":"integer","answer":true,"code":false},{"text":"number","answer":false,"code":false},{"text":"variant","answer":false,"code":false}]},{"id":48,"code":"","reference":"","choices":[{"text":"`Rmat[upper.tri(Rmat)]`","answer":true,"code":false},{"text":"`upper.triangular(Rmat)`","answer":false,"code":false},{"text":"`upper.tri(Rmat)`","answer":false,"code":false},{"text":"`upper.diag(Rmat)`","answer":false,"code":false}]},{"id":49,"code":"`x <- c(12L, 6L, 10L, 8L, 15L, 14L, 19L, 18L, 23L, 59L)`","reference":"`x <- c(12L, 6L, 10L, 8L, 15L, 14L, 19L, 18L, 23L, 59L)`","choices":[{"text":"numeric","answer":false,"code":false},{"text":"integer","answer":false,"code":false},{"text":"single","answer":false,"code":false},{"text":"double","answer":true,"code":false}]},{"id":50,"code":"`a <- list(\"10\", TRUE, 5.6)`","reference":"`a <- list(\"10\", TRUE, 5.6)`","choices":[{"text":"is.list(a[1])","answer":true,"code":false},{"text":"is.numeric(a[1])","answer":false,"code":false},{"text":"is.logical(a[1])","answer":false,"code":false},{"text":"is.character(a[1])","answer":false,"code":false}]},{"id":51,"code":"`x <- as.Date(\"2018-10-01\")` ### Q51. How do you obtain the row numbers in a data frame named `pizza` for which the value of `pizza$delivery_min` is greater than or equal to 30?  late_delivery <- pizza$delivery_min >= 30 index_late <- index(late_delivery) index_late   late_delivery <- pizza$delivery_min >= 30 rownum_late <- rownum(late_delivery) rownum_late   late_delivery <- pizza$delivery_min >= 30 which_late <- which(late_delivery) which_late   late_delivery <- pizza$delivery_min >= 30 late <- pizaa$late_delivery pizza$late","choices":[{"text":"\nlate_delivery <- pizza$delivery_min >= 30\nindex_late <- index(late_delivery)\nindex_late\n","code":true,"answer":false},{"text":"\nlate_delivery <- pizza$delivery_min >= 30\nrownum_late <- rownum(late_delivery)\nrownum_late\n","code":true,"answer":false},{"text":"\nlate_delivery <- pizza$delivery_min >= 30\nwhich_late <- which(late_delivery)\nwhich_late\n","code":true,"answer":true},{"text":"\nlate_delivery <- pizza$delivery_min >= 30\nlate <- pizaa$late_delivery\npizza$late\n","code":true,"answer":true}]},{"id":52,"question":"Which function returns `[1] TRUE FALSE TRUE`?","code":"`indat <- c(\"Ash Rd\",\"Ash Cir\",\"Ash St\")`","reference":"`indat <- c(\"Ash Rd\",\"Ash Cir\",\"Ash St\")`","choices":[{"text":"grepl(\"[Rd|Ave|Dr|St]\", indat)","answer":false,"code":false},{"text":"grepl(\"Rd|Ave|Dr|St\", indat)","answer":true,"code":false},{"text":"grepl(\"Rd,Ave,Dr,St\", indat)","answer":false,"code":false},{"text":"grepl(\"[Rd],[Ave],[Dr],[St]\", indat)","answer":false,"code":false}]}]